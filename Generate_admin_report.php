<?php
session_start();
require_once 'TCPDF-main/tcpdf.php';
require_once 'db2_connect.php';

// Get report parameters
$reportType = $_POST['report_type'] ?? '';
$startDate = $_POST['start_date'] ?? '';
$endDate = $_POST['end_date'] ?? '';
$department = $_POST['department'] ?? '';

// Get the user who generated the report from the session
$generatedBy = $_SESSION['name'] ?? 'System'; // Assuming you store the user's name in the session

if (empty($reportType) || empty($startDate) || empty($endDate)) {
    die("Please fill in all required fields.");
}

// Report title mapping
$reportTitles = [
    'appointments' => 'Appointments Report',
    'feedback' => 'Feedback Report',
    'lecturers' => 'Lecturers Report',
    'students' => 'Registered Students Report',
];

$title = $reportTitles[$reportType] ?? 'Unknown Report';

// Custom TCPDF class with properly formatted Header and Footer
class CustomPDF extends TCPDF {
    protected $generatedBy;
    protected $pageCount = 0; // Counter to track page number

    public function setGeneratedBy($name) {
        $this->generatedBy = $name;
    }

    public function Header() {
        $this->pageCount++; // Increment page counter

        if ($this->pageCount === 1) {
            //  Logo only on the first page
            $this->Image('Ku_logo.jpeg', 15, 10, 25, 25, 'JPEG');
        }

        $this->SetFont('Helvetica', 'B', 16);
        $this->Cell(0, 10, 'Kenyatta University', 0, 1, 'C');
        $this->SetFont('Helvetica', 'B', 14);
        $this->Cell(0, 10, 'Student Lecturer Appointment System', 0, 1, 'C');
        $this->Ln(5);

        // Add "Generated By" information
        $this->SetFont('Helvetica', 'I', 10);
        $this->Cell(0, 10, 'Generated By: ' . $this->generatedBy, 0, 1, 'R');
    }

    public function Footer() {
        $this->SetY(-25); // Moves footer up slightly to prevent overlap
        $this->SetFont('Helvetica', 'I', 9);
        $this->Cell(0, 10, '________________________________________________', 0, 1, 'C');

        // Footer text (Centered)
        $this->SetFont('Helvetica', 'B', 10);
        $this->Cell(0, 10, 'Kenyatta University Student Lecturer Appointment System', 0, 1, 'C');

        // Space before page number
        $this->Ln(3);

        // Page number (Centered below the footer text)
        $this->SetFont('Helvetica', 'I', 9);
        $this->Cell(0, 10, 'Page ' . $this->getAliasNumPage() . ' of ' . $this->getAliasNbPages(), 0, 1, 'C');
    }
}

// Create PDF
$pdf = new CustomPDF();
$pdf->setGeneratedBy($generatedBy); // Set the generated by information
$pdf->SetMargins(15, 15, 15);
$pdf->SetAutoPageBreak(TRUE, 30); // Prevents footer overlap
$pdf->AddPage();
$pdf->SetFont('Helvetica', '', 12);

// Report title
$pdf->Ln(5);
$pdf->SetFont('Helvetica', 'B', 14);
$pdf->Cell(0, 10, $title, 0, 1, 'C');
$pdf->SetFont('Helvetica', '', 12);
$pdf->Cell(0, 10, "From: $startDate  To: $endDate", 0, 1, 'C');

// Department filter display
if (!empty($department) && ($reportType === 'appointments' || $reportType === 'students')) {
    $pdf->Cell(0, 10, "Department: $department", 0, 1, 'C');
}

$pdf->Ln(10);

// Query Selection
switch ($reportType) {
    case 'appointments':
        $sql = "SELECT a.Appointment_ID, s.name AS student_name, l.name AS lecturer_name, l.department,
                a.appointment_date, a.time_of_appointment, a.status
                FROM appoint a
                JOIN students s ON a.student_id = s.Student_ID
                JOIN lecturer l ON a.lecturer_id = l.lecturer_id
                WHERE a.appointment_date BETWEEN '$startDate' AND '$endDate'";

        if (!empty($department)) {
            $sql .= " AND l.department = '$department'";
        }
        break;

    case 'feedback':
        $sql = "SELECT student_id, Email, feedback_text FROM feedback
                WHERE feedback_date BETWEEN '$startDate' AND '$endDate'";
        break;

    case 'lecturers':
        $sql = "SELECT lecturer_id, name AS lecturer_name, department FROM lecturer";
        break;

    case 'students':
        $sql = "SELECT Student_ID, Name, Email, Contact_No, school, department, Course, Registration_Date
                FROM students";

        if (!empty($department)) {
            $sql .= " WHERE department = '$department'";
        }
        break;

    default:
        $pdf->Cell(0, 10, 'Invalid report type selected.', 1, 1, 'C');
        $pdf->Output('report.pdf', 'I');
        exit();
}

// Execute Query
$result = $conn->query($sql);

if ($result && $result->num_rows > 0) {
    // Table Header
    $pdf->SetFont('Helvetica', 'B', 10);
    $pdf->SetFillColor(230, 230, 230);
    $pdf->Cell(40, 10, 'Field', 1, 0, 'C', true);
    $pdf->Cell(80, 10, 'Value', 1, 1, 'C', true);

    $pdf->SetFont('Helvetica', '', 10);

    while ($row = $result->fetch_assoc()) {
        foreach ($row as $key => $value) {
            $pdf->Cell(40, 10, ucfirst(str_replace('_', ' ', $key)), 1);
            $pdf->Cell(80, 10, $value, 1);
            $pdf->Ln();
        }
        $pdf->Ln();
    }
} else {
    $pdf->Cell(0, 10, 'No data found for the selected report type.', 1, 1, 'C');
}

// Output the PDF
header('Content-Type: application/pdf');
header('Content-Disposition: inline; filename="report.pdf"');
$pdf->Output('report.pdf', 'I');
?>